// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DatePicker renders correctly (snapshot test) 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "width": 142,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 40,
          "justifyContent": "center",
        },
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderColor": "#aaa",
            "borderWidth": 1,
            "flex": 1,
            "height": 40,
            "justifyContent": "center",
          },
          Object {},
          false,
          false,
        ]
      }
    >
      <Text
        allowFontScaling={true}
        style={
          Array [
            Object {
              "color": "#333",
            },
            Object {},
          ]
        }
      >
        2019-01-01
      </Text>
    </View>
    <Image
      source={
        Object {
          "testUri": "../../../date_icon.png",
        }
      }
      style={
        Array [
          Object {
            "height": 32,
            "marginLeft": 5,
            "marginRight": 5,
            "width": 32,
          },
          Object {},
        ]
      }
    />
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
          "landscape-left",
          "landscape-right",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "opacity": 0,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "#00000077",
                "flex": 1,
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={false}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "height": 259,
                    "overflow": "hidden",
                    "transform": Array [
                      Object {
                        "translateY": 259,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="auto"
                >
                  <View
                    style={
                      Array [
                        Object {
                          "borderTopColor": "#ccc",
                          "borderTopWidth": 1,
                          "marginTop": 42,
                        },
                        Object {},
                      ]
                    }
                  >
                    <RCTDatePicker
                      date={1546268400000}
                      mode="date"
                      onChange={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "height": 216,
                        }
                      }
                    />
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 42,
                        "justifyContent": "center",
                        "paddingHorizontal": 20,
                        "position": "absolute",
                        "top": 0,
                      },
                      Object {
                        "left": 0,
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={true}
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 16,
                        },
                        Object {
                          "color": "#666",
                        },
                        Object {},
                      ]
                    }
                  >
                    Cancel
                  </Text>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "height": 42,
                        "justifyContent": "center",
                        "paddingHorizontal": 20,
                        "position": "absolute",
                        "top": 0,
                      },
                      Object {
                        "right": 0,
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={true}
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 16,
                        },
                        Object {},
                      ]
                    }
                  >
                    Confirm
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </Modal>
  </View>
</View>
`;
